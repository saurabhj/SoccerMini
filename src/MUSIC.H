/*  ============================================================
 *	The "SOCCER mini" game                                     *
 *	Written by Gaurang Sinha & Saurabh Jain                    *
 *	TE COMPUTER STUDENTS,                                      *
 *	MES College of Engineering,                                *
 *	Wadia College Campus,                                      *
 *	Pune - 411001                                              *
 *                                                             *
 *	Entry to the "Game Programming Competition in C / C++"     *
 *                                                             *
 * 	Written in Borland's Turbo C 3.0                           *
 *  Code best viewed in the Turbo C 3.0 Editor                 *
 *                         with a tab spacing of 4             *
 *  ============================================================
*/

// Interrupt declaration
#define INTR 0X08    /* The clock tick interrupt */

//////////////////////////////////////////////////////////////////////////
//	    		# DEFINITIONS FOR FUNCTION CALL ROUTINES				//
//////////////////////////////////////////////////////////////////////////
#define __CPPARGS ...


//////////////////////////////////////////////////////////////////////////
//	    		  DEFINING THE PROTOTYPES OF FUNCTIONS					//
//////////////////////////////////////////////////////////////////////////
void StartSong(void);
void StopSong(void);

// Interrupt call to set / get ISR
void interrupt ( *oldhandler)(__CPPARGS);

int count;
int *CurrentSong;
int s;
//////////////////////////////////////////////////////////////////////////
//			   		 		NAMES OF ALL TRACKS							//
//////////////////////////////////////////////////////////////////////////
char Songs[11][21] = { 	"Indiana Jones",
						"Star Wars",
						"Wake Me Up",
						"We Are The Champions",
						"Pink Panther",
						"Simpsons",
						"King Of The Hill",
						"Tetris",
						"Mary Poppins",
						"Pac Man",
						"No Music"};

//////////////////////////////////////////////////////////////////////////
//			   			FREQUENCY, DELAY OF ALL TRACKS					//
//////////////////////////////////////////////////////////////////////////
// Format = { Frequency, Delay, Frequency, Delay, .... }
int Notes[11][84] = {
					{//Indiana Jones
					330, 240, 349, 120, 392, 120, 523, 960, 294, 240, 330,
					120, 349, 960, 392, 240, 440, 120, 494, 120, 698, 960,
					440, 240, 494, 120, 523, 480, 587, 480, 659, 480, 330,
					240, 349, 120, 392, 120, 523, 960, 587, 240, 659, 120,
					698, 1440, 392, 240, 392, 120, 659, 360, 587, 240, 392,
					120, 659, 360, 587, 240, 392, 120, 698, 360, 659, 240,
					587, 120, 523, 480, -1, -1
					},
					{//Star Trek
					349, 167, 349, 167, 349, 167, 466, 1000, 698, 1000, 622,
					167, 587, 167, 523, 167, 932, 1000, 698, 500, 622, 167,
					587, 167, 523, 167, 932, 1000, 698, 500, 622, 167, 587,
					167, 622, 167, 523, 667, 349, 167, 349, 167, 349, 167,
					466, 1000, 698, 1000, 622, 167, 587, 167, 523, 167, 932,
					1000, 698, 500, 622, 167, 587, 167, 523, 167, 932, 1000,
					698, 500, 622, 167, 587, 167, 622, 167, 523, 667, -1, -1
					},
					{//Wake Me Up
					659, 240, 784, 120, 880, 120, 659, 120, 784, 360, 880,
					240, 659, 120, 523, 120, 523, 120, 587, 240, 659, 120,
					698, 360, 659, 120, 587, 240, 523, 120, 659, 360, 784,
					240, 659, 120, 523, 120, 523, 120, 659, 240, 784, 120,
					880, 480, 659, 120, 784, 360, 880, 240, 659, 120, 523,
					120, 523, 120, 523, 120, 659, 360, 523, 240, 587, 360,
					659, 120, 587, 240, 587, 360, 523, 360, -1, -1
					},
					{//We are the champions
					698, 1200, 659, 300, 698, 300, 659, 600, 523, 600, 440,
					300, 587, 600, 440, 900, 523, 300, 698, 1200, 784, 300,
					880, 300, 1047, 600, 880, 900, 587, 300, 659, 300, 587,
					1200, 587, 900, 523, 600, 587, 300, 523, 900, 466, 600,
					932, 900, 880, 600, 932, 300, 880, 900, 784, 600, 880,
					900, 698, 600, 932, 300, 880, 900, 698, 300, 932, 300,
					831, 900, 698, 600, 932, 300, 831, 900, 698, 600, -1, -1
					},
					{//Pink Panther
					311, 188, 330, 188, 370, 188, 392, 188, 311, 188, 330,
					188, 370, 188, 392, 188, 523, 188, 494, 188, 311, 188,
					330, 188, 494, 188, 466, 1125, 440, 188, 392, 188, 330,
					188, 294, 188, 330, 750, -1, -1
					},
					{//Simpsons
					523, 562, 659, 375, 740, 375, 880, 188, 784, 562, 659,
					375, 523, 375, 440, 188, 370, 188, 370, 188, 370, 188,
					392, 750, 370, 188, 370, 188, 370, 188, 392, 188, 466,
					562, 523, 188, 523, 188, 523, 188, 523, 375, -1, -1
					},
					{//King of the Hill
					698, 375, 698, 188, 880, 188, 698, 375, 932, 375, 932,
					188, 1175, 188, 1047, 375, 698, 375, 698, 188, 698, 188,
					880, 188, 698, 375, 932, 375, 880, 375, 784, 375, 880,
					188, 784, 188, 698, 375, 698, 188, 698, 188, 880, 188,
					698, 375, 932, 375, 932, 188, 1175, 188, 1047, 375, 1397,
					375, 1175, 375, 1047, 375, 932, 375, 880, 375, 932, 188,
					880, 188, 698, 375, -1, -1
					},
					{//Tetris
					659, 375, 494, 188, 523, 188, 587, 188, 659, 94, 587, 94,
					523, 188, 494, 188, 440, 375, 440, 188, 523, 188, 659,
					375, 587, 188, 523, 188, 494, 375, 494, 188, 523, 188,
					587, 375, 659, 375, 523, 375, 440, 375, 440, 750, 587,
					375, 698, 188, 880, 375, 784, 188, 698, 188, 659, 375,
					659, 188, 523, 188, 659, 375, 587, 188, 523, 188, 494,
					375, 494, 188, 523, 188, 587, 375, 659, 375, 523, 375,
					440, 375, 440, 375, -1, -1
					},
					{//Mary Poppins
					440, 150, 659, 150, 659, 150, 659, 150, 659, 150, 659,
					150, 659, 150, 659, 150, 659, 150, 698, 300, 659, 150,
					587, 600, 587, 300, 659, 300, 587, 300, 523, 300, 587,
					300, 523, 300, 494, 300, 466, 300, 494, 300, 659, 600,
					440, 150, 659, 150, 659, 150, 659, 150, 659, 150, 659,
					150, 659, 150, 659, 150, 659, 150, 698, 300, 659, 150,
					587, 600, -1, -1
					},
					{// Pac Man
					494, 67, 988, 67, 740, 67, 622, 67, 988, 67, 740, 67,
					622, 134, 523, 67, 1047, 67, 784, 67, 659, 67, 1047,
					67, 784, 67, 659, 134, 494, 67, 988, 67, 740, 67, 622,
					67, 988, 67, 740, 67, 622, 134, 622, 67, 659, 67, 698,
					67, 698, 67, 740, 67, 784, 67, 784, 67, 831, 67, 880, 67,
					988, 100, -1, -1
					},
					{// No Music
					-1, -1, -1, -1, -1, -1, -1, -1
					}
				};

//////////////////////////////////////////////////////////////////////////
//			       		INTERRUPT SERVICE ROUTINE						//
//////////////////////////////////////////////////////////////////////////
void interrupt handler(__CPPARGS)
{
	count++;

	// Playes tone ... using frequency from song[]
	sound(CurrentSong[s]);
	// Checks to see if duration has elapsed, and if so, to move to next
	// tone
	if(count >= CurrentSong[s+1] * 0.0182) {	//INT 08h -> 18.2 Hz
		s = s + 2;
		count = 0;
	}

	// Checks to see if song is over, then repeats ...
	if(CurrentSong[s] == -1) {
		count = 0;
		s = 0;
	}

	// Restores control back to old handle and quits
	oldhandler();
}

//////////////////////////////////////////////////////////////////////////
//			       	     FUNCTION TO START A SONG						//
//////////////////////////////////////////////////////////////////////////
void
StartSong(void) {
   oldhandler = getvect(INTR);              // Getting original ISR
   setvect(INTR, handler);					// Setting new interrupt
}											//

//////////////////////////////////////////////////////////////////////////
//						FUNCTION TO STOP SONG							//
//////////////////////////////////////////////////////////////////////////
void										//
StopSong(void) {							//
	nosound();								// Stopping sound
	setvect(INTR, oldhandler);				// Restoring ISR
}

